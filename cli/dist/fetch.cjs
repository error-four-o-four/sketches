#!/usr/bin/env node
"use strict";const a=require("node:path"),c=require("node:fs"),h=require("node:util"),l=require("./index-BR1ysLzg.cjs"),w="https://cdnjs.cloudflare.com/ajax/libs",y="https://api.cdnjs.com/libraries",v=["name","version","filename","sri"],b=["name","sri"];(async()=>{const{positionals:e}=h.parseArgs({args:process.argv.slice(2),strict:!1,allowPositionals:!0});let[n,s]=g(e);n||(console.log("Please provide a valid a library name"),console.log("e.g. 'p5.js', 'p5.js@1.10.0' or p5.js 1.9.1"),process.exit(1));const r=a.resolve("./public/libs.json"),o=l.parseJson(r)??{};if(!Object.hasOwn(o,n)){const t=await x(n);t&&(o[n]=t)}if(s){const t=await m(o[n],n,s);t&&(o[n]=t)}l.writeJson(r,o),s=s||o[n].latest,await D(n,s,o[n].filename,o[n].versions[s]),console.log("âœ… Done")})();function g(e){if(e.length===0||!e[0])return[null,null];if(e[0].includes("@")){const[s,r]=e[0].split("@");return[s,d(r)]}const n=e[1]?d(e[1]):null;return[e[0],n]}function d(e){return/^\d+\.\d+\.\d+$/.test(e)?e:(console.log("%o is an invalid version",e),null)}async function u(e,n){const s=n?`${e}/${n}`:e,o=`${y}/${s}?fields=${(n?b:v).join(",")}`;console.log("Fetching data from %o ...",o);const t=await j(o);return t||(console.log("Could not fetch library data!"),process.exit(1)),"error"in t&&(console.log(t.status,t.message),process.exit(1)),t}async function j(e){try{return await(await fetch(e)).json()}catch(n){l.logError(n)}return null}async function x(e){const n=await u(e,null);return{latest:n.version,filename:n.filename,versions:{[n.version]:f(n,n.version)},updatedAt:new Date().toISOString()}}async function m(e,n,s){const r=new Date(e.updatedAt).valueOf(),o=Date.now()-r>1e3*60*60*24*31;if(!s&&!o&&e.latest)return console.log("Latest version %o of %o has already been fetched",e.latest,n),null;if(!s&&o){const t=await u(n,null);return t.version===e.latest&&t.version in e.versions?(console.log("Latest version %o of %o has already been fetched",e.latest,n),null):(e.latest=t.version,e.versions[t.version]=f(t,t.version),e.updatedAt=new Date().toISOString(),e)}if(s){if(Object.keys(e.versions).includes(s))return console.log("Version %o of %o has already been fetched",s,n),null;const i=await u(n,s);return e.versions[s]=f(i,s,e.filename),e}console.log("Something went wrong ..."),process.exit(1)}function f(e,n,s){if(s="filename"in e?e.filename:s,!s)throw new Error("Filename of %o is required!");return{url:$(e.name,n,s),sri:typeof e.sri=="string"?e.sri:e.sri[s]}}function $(e,n,s){return`${w}/${e}/${n}/${s}`}async function D(e,n,s,{url:r}){const o=a.resolve("./public",e,n),t=a.resolve(o,s);c.existsSync(t)&&(console.log("Version %o of %o has already been downloaded",n,e),process.exit(0)),c.mkdirSync(o,{recursive:!0});try{const p=await(await fetch(r)).text();c.writeFileSync(t,p,"utf-8")}catch(i){l.logError(i),process.exit(1)}}
